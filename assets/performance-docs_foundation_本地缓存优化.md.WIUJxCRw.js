import{_ as a,c as e,o,U as t}from"./chunks/framework.qUHj8-gn.js";const s="/assets/性能优化之localstorage.31I_fzGu.png",r="/assets/性能优化之sessionStorage.hLBQloGA.png",b=JSON.parse('{"title":"本地存储优化","description":"","frontmatter":{},"headers":[],"relativePath":"performance-docs/foundation/本地缓存优化.md","filePath":"performance-docs/foundation/本地缓存优化.md","lastUpdated":1709437809000}'),n={name:"performance-docs/foundation/本地缓存优化.md"},i=t('<h1 id="本地存储优化" tabindex="-1">本地存储优化 <a class="header-anchor" href="#本地存储优化" aria-label="Permalink to &quot;本地存储优化&quot;">​</a></h1><p>说到浏览器的本地存储，很容易可以联想到<strong>LocalStorage</strong>，<strong>SessionStorage</strong>，<strong>indexedDB</strong>这些方案。</p><p>但是需要了解的是为什么要做浏览的本地存储？一是做数据的持久化，避免数据丢失，第二个重要的点是可以缓存一些复杂数据，从而提升性能。</p><h2 id="webstorage" tabindex="-1">WebStorage <a class="header-anchor" href="#webstorage" aria-label="Permalink to &quot;WebStorage&quot;">​</a></h2><p>WebStorage是HTML5专门为浏览器存储而提供的数据存储机制。它被分为Local Storage 与 Session Storage。这两组的概念非常接近，它们有这样的共性：</p><ul><li>存储容量很大：Web Storage 根据浏览器的实现不同，存储量一般达到5-10M之间。</li><li>仅仅位于浏览器端，不会与服务端发生通信。</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>注意了！由于WebStorage不参与到通信之中，意味着一些稳定的资源计算或者fetch之后可以存储到WebStorage之后，后续就完全不需要去网络请求活再次计算了，直接从缓存中读取即可。<strong>这样做的本质也是减少了重复的网络请求从而来提升性能</strong></p></div><h3 id="localstorage" tabindex="-1">LocalStorage <a class="header-anchor" href="#localstorage" aria-label="Permalink to &quot;LocalStorage&quot;">​</a></h3><p>LocalStorage 可以做持久化的本地存储，存储其中的数据是永远不会过期的，使其消失的唯一办法是手动进行删除。</p><p>那么可以使用它来做一些<strong>持久</strong>的内容缓存。有一些图片内容十分丰富的电商网站会用它存储Base64格式的图片字符串：</p><p><img src="'+s+'" alt="image"></p><h3 id="sessionstorage" tabindex="-1">SessionStorage <a class="header-anchor" href="#sessionstorage" aria-label="Permalink to &quot;SessionStorage&quot;">​</a></h3><p>Session Storage 更适合存储一些用于存储生命周期和它同步的<strong>会话级别</strong>的信息。这些信息只适用于当前会话，当开启新得会话时，它也需要相应得更新或释放。比如在NexSight中，会在打开一个工程时，发出一次获取工程信息的请求，并向缓存中存入这些工程信息，这样后续的子页面中这些工程信息就不用于继续请求了，而是直接冲缓存中读取</p><p><img src="'+r+'" alt="image"></p><h3 id="面试题-localstorage-与-sessionstorage-的区别" tabindex="-1">面试题：LocalStorage 与 SessionStorage 的区别？ <a class="header-anchor" href="#面试题-localstorage-与-sessionstorage-的区别" aria-label="Permalink to &quot;面试题：LocalStorage 与 SessionStorage 的区别？&quot;">​</a></h3><table><thead><tr><th>SessionStorage</th><th>LocalStorage</th></tr></thead><tbody><tr><td>一次会话生命周期</td><td>持久有效</td></tr></tbody></table>',16),l=[i];function c(g,d,h,p,_,S){return o(),e("div",null,l)}const u=a(n,[["render",c]]);export{b as __pageData,u as default};
